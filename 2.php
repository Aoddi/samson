<pre>
<?php

/* 2.2. Задание
Зарегистрироваться и создать проект на https://github.com/. Ссылку на проект прислать по электронной почте. Для работы с GIT использовать встроенный в IDE функционал или установить https://tortoisegit.org/
Освоить работу с гитом. Добавить в репозиторий все файлы, созданные ранее по заданиям.
Сделать ветку step2, переключиться на нее, дальнейшие задания выполнять в ней. После выполнения каждого пункта задания делать комит в ветку step2, в конце сделать мерж из ветки step2 в master, и сделать таг r.0.1
Создать файл 2.php и в нем реализовать:
- функцию convertString($a, $b). Результат ее выполнение: если в строке $a содержится 2 и более подстроки $b, то во втором месте заменить подстроку $b на инвертированную подстроку.
- функию mySortForKey($a, $b). $a – двумерный массив вида [['a'=>2,'b'=>1],['a'=>1,'b'=>3]], $b – ключ вложенного массива. Результат ее выполнения: двумерном массива $a отсортированный по возрастанию значений для ключа $b. В случае отсутствия ключа $b в одном из вложенных массивов, выбросить ошибку класса Exception с индексом неправильного массива.
Установить MySql версии 5.6 или 5.7, создать БД test_samson.
Создать в БД таблицу a_product с колонками для хранения товаров: ид, код, название.
Создать в БД таблицу a_property с колонками для хранения свойства товаров: товар, значение свойства.
Создать в БД таблицу a_ price с колонками для хранения цен на товары: связь товар, тип цены и цена.
Создать в БД таблицу a_category с колонками для хранения рубрик: ид, код, название.
Добавить в БД хранение связи товара с рубрикой.
Добавить в БД возможность хранения многоуровневого рубрикатора (уровень вложенности неограничен).
Выгрузить дамп получившейся БД в файл 2.sql.
Реализовать функцию importXml($a). $a – путь к xml файлу (структура файла приведена ниже). Результат ее выполнения: прочитать файл $a и импортировать его в созданную БД.
Реализовать функцию exportXml($a, $b). $a – путь к xml файлу вида (структура файла приведена ниже), $b – код рубрики. Результат ее выполнения: выбрать из БД товары (и их характеристики, необходимые для формирования файла) выходящие в рубрику $b или в любую из всех вложенных в нее рубрик, сохранить результат в файл $a.
Добавить новые файлы в репозиторий.
Пример структуры файда XML:
<?xml version="1.0" encoding="windows-1251"?>
<Товары>
<Товар Код="201" Название="Бумага А4">
<Цена Тип="Базовая">11.50</Цена>
<Цена Тип="Москва">12.50</Цена>
<Свойства>
<Плотность>100</Плотность>
<Белизна ЕдИзм="%">150</Белизна>
</Свойства>
<Разделы>
<Раздел>Бумага</Раздел>
</Разделы>
</Товар>
<Товар Код="202" Название="Бумага А3">
<Цена Тип="Базовая">18.50</Цена>
<Цена Тип="Москва">22.50</Цена>
<Свойства>
<Плотность>90</Плотность>
<Белизна ЕдИзм="%">100</Белизна>
</Свойства>
<Разделы>
<Раздел>Бумага</Раздел>
</Разделы>
</Товар>
<Товар Код="302" Название="Принтер Canon">
<Цена Тип="Базовая">3010</Цена>
<Цена Тип="Москва">3500</Цена>
<Свойства>
<Формат>A4</Формат>
<Формат>A3</Формат>
<Тип>Лазерный</Тип>
</Свойства>
<Разделы>
<Раздел>Принтеры</Раздел>
<Раздел>МФУ</Раздел>
</Разделы>
</Товар>
<Товар Код="305" Название="Принтер HP">
<Цена Тип="Базовая">3310</Цена>
<Цена Тип="Москва">2999</Цена>
<Свойства>
<Формат>A3</Формат>
<Тип>Лазерный</Тип>
</Свойства>
<Разделы>
<Раздел>Принтеры</Раздел>
<Раздел>МФУ</Раздел>
</Разделы>
</Товар>
</Товары>
*/

/**
 * Функция для поиска второй подстроки и инверсии её
 * @param string $a
 * @param string $b подстрока которую нужно найти в $a
 * @return string инверсия второй подстроки
 */
function convertString(string $a, string $b): string
{
    $arr = explode(' ', $a);
    $stringLowerCase = mb_strtolower($b);
    $counter = 0;

    foreach ($arr as $key => $word) {
        $wordLowerCase = mb_strtolower($word);
        $wordTrim = trim($wordLowerCase, "\x20..\x2F\x3A..\x3F");

        if ($stringLowerCase === $wordTrim) $counter++;
        if ($counter == 2) {
            $wordArray = preg_split('/(?<!^)(?!$)/u', $word);
            $wordArrayRev = array_reverse($wordArray);
            $arr[$key] = implode($wordArrayRev);
            break;
        }
    }

    return implode(' ', $arr);
}

// var_dump(convertString('меня зовут Меня Артём. У Меня есть кошка, а также у меня есть Пёс', 'меня'));

/**
 * Функция сортирует массив по возрастанию значния $b
 * @param array $a входной массив
 * @param string $b ключ
 * @return array 
 */
function mySortForKey(array $a, string $b): array
{
    foreach ($a as $key => $arr) {
        if (!$arr[$b]) {
            throw new Exception('Нет ключа "' .  $b . '" в массиве с индексом - ' . $key);
        }
    }

    usort($a, function ($c, $d) use ($b) {
        return $c[$b] <=> $d[$b];
    });

    return $a;
}

try {
    // var_dump(mySortForKey([['a' => 2, 'b' => 1], ['d' => 1, 'b' => 3], ['d' => 9, 'b' => 3], ['a' => 4, 'a' => 6], ['a' => 7, 'b' => 2], ['a' => 0, 'b' => 1]], 'b'));
} catch (Exception $e) {
    echo $e -> getMessage();
}

?>
</pre>